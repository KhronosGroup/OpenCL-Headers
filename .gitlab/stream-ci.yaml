stages:
  - build   # Test if headers build and install (CMake)
  - test    # Test if unit tests pass (CTest)
  - consume # Test if downstream can depend on installs (CMake)

variables:
  DEPS_DIR: "$CI_PROJECT_DIR/__dependencies"
  CMAKE_MINIMUM_URL: "https://cmake.org/files/v3.0/cmake-3.0.2-Linux-i386.tar.gz"
  CMAKE_LATEST_URL: "https://cmake.org/files/v3.21/cmake-3.21.2-linux-x86_64.tar.gz"

## Setup environments ##

.rocm-cmake-minimum:
  tags:
    - rocm
  image: rocm/rocm-terminal:latest
  before_script:
    - $SUDO_CMD apt-get update -qq
    - $SUDO_CMD apt-get install -y -qq wget git tar xz-utils bzip2 build-essential pkg-config ninja-build ca-certificates
    - hipconfig
    - mkdir -p $DEPS_DIR/cmake-minimum
    - wget --no-check-certificate --quiet -O - $CMAKE_MINIMUM_URL | tar --strip-components=1 -xz -C $DEPS_DIR/cmake-minimum
    - export PATH=$DEPS_DIR/cmake-minimum/bin:$PATH

.rocm-cmake-latest:
  tags:
    - rocm
  image: rocm/rocm-terminal:latest
  before_script:
    - $SUDO_CMD apt-get update -qq
    - $SUDO_CMD apt-get install -y -qq wget git tar xz-utils bzip2 build-essential pkg-config ninja-build ca-certificates
    - hipconfig
    - mkdir -p $DEPS_DIR/cmake-latest
    - wget --no-check-certificate --quiet -O - $CMAKE_LATEST_URL | tar --strip-components=1 -xz -C $DEPS_DIR/cmake-latest
    - export PATH=$DEPS_DIR/cmake-latest/bin:$PATH

#################
##             ##
## Build stage ##
##             ##
#################

## ROCm

build:rocm-cmake-minimum:
  extends: .rocm-cmake-minimum
  stage: build
  script:
    - mkdir install
    - mkdir build && cd build
    - cmake
      -G Ninja
      -D CMAKE_BUILD_TYPE=Release
      -D BUILD_TESTING=ON
      -D CMAKE_INSTALL_PREFIX=../install
      ../
    - cmake
      --build ./
    - cmake
      --build ./
      --target install
  artifacts:
    paths:
      - build/
      - install/
    exclude:
      - build/**/CMakeFiles/
    expire_in: 2 weeks

build:rocm-cmake-latest:
  extends: .rocm-cmake-latest
  stage: build
  script:
    - cmake
      -G "Ninja Multi-Config"
      -D BUILD_TESTING=ON
      -D CMAKE_INSTALL_PREFIX=./install
      -B ./build
      -S ./
    - cmake
      --build ./
      --config Debug
    - cmake
      --build ./
      --config Release
    - cmake
      --build ./
      --config Debug
      --target install
    - cmake
      --build ./
      --config Release
      --target install
  artifacts:
    paths:
      - build/
      - install/
    exclude:
      - build/**/CMakeFiles/
    expire_in: 2 weeks

################
##            ##
## Test stage ##
##            ##
################

## ROCm

test:rocm-cmake-minimum:
  extends: .rocm-cmake-minimum
  stage: test
  needs:
    - build:rocm-cmake-minimum
  tags:
    - vega20
    - rocm
  script:
    - cd build
    - ctest --output-on-failure

test:rocm-cmake-latest:
  extends: .rocm-cmake-latest
  stage: test
  needs:
    - build:rocm-cmake-latest
  tags:
    - vega20
    - rocm
  script:
    - cd build
    - ctest
      -C Debug
      --output-on-failure
    - ctest
      -C Release
      --output-on-failure

###################
##               ##
## Consume stage ##
##               ##
###################

## ROCm

consume:rocm-cmake-minimum:
  extends: .rocm-cmake-minimum
  stage: consume
  needs:
    - test:rocm-cmake-minimum
  tags:
    - rocm
  script:
    - mkdir -P $CI_PROJECT_DIR/downstream/bare && cd $CI_PROJECT_DIR/downstream/bare
    - cmake
      -G Ninja
      -D CMAKE_BUILD_TYPE=Release
      -D CMAKE_PREFIX_PATH=$CI_PROJECT_DIR/install
      ../tests/pkgconfig/bare
    - cmake
      --build ./
    # Emulate the presence of the SDK
    - cmake -E
      make_directory $CI_PROJECT_DIR/install/share/cmake/OpenCL
    - echo 'include("${CMAKE_CURRENT_LIST_DIR}/../OpenCLHeaders/OpenCLHeadersTargets.cmake")' > $CI_PROJECT_DIR/install/share/cmake/OpenCL/OpenCLConfig.cmake
    - mkdir -P $CI_PROJECT_DIR/downstream/sdk && cd $CI_PROJECT_DIR/downstream/sdk
    - cmake
      -G Ninja
      -D CMAKE_BUILD_TYPE=Release
      -D CMAKE_PREFIX_PATH=$CI_PROJECT_DIR/install
      ../tests/pkgconfig/sdk
    - cmake
      --build ./

consume:rocm-cmake-latest:
  extends: .rocm-cmake-latest
  stage: consume
  needs:
    - test:rocm-cmake-latest
  tags:
    - rocm
  script:
    - cmake
      -G Ninja
      -D CMAKE_BUILD_TYPE=Release
      -D CMAKE_PREFIX_PATH=$CI_PROJECT_DIR/install
      -B ./downstream/bare
      -S ./tests/pkgconfig/bare
    - cmake
      --build downstream/bare
    # Emulate the presence of the SDK
    - cmake -E
      make_directory $CI_PROJECT_DIR/install/share/cmake/OpenCL
    - echo 'include("${CMAKE_CURRENT_LIST_DIR}/../OpenCLHeaders/OpenCLHeadersTargets.cmake")' > $CI_PROJECT_DIR/install/share/cmake/OpenCL/OpenCLConfig.cmake
    - cmake
      -G Ninja
      -D CMAKE_BUILD_TYPE=Release
      -D CMAKE_PREFIX_PATH=$CI_PROJECT_DIR/install
      -B ./downstream/sdk
      -S ./tests/pkgconfig/sdk
    - cmake
      --build downstream/sdk
